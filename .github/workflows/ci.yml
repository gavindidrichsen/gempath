name: CI

on:
  push:
    branches: [ 
      main, 
      master
    ]
  pull_request:
    branches: [ main, master ]

# Global permissions apply to all jobs by default. Individual jobs that require 
# additional permissions must define their own permissions block, which completely 
# overrides (not merges with) these global permissions.
permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    # No additional permissions needed - inherits contents: read
    strategy:
      matrix:
        ruby-version: ['3.2']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    
    - name: Run tests
      run: bundle exec rake spec
    
    - name: Run RuboCop
      run: bundle exec rubocop

  lint:
    runs-on: ubuntu-latest
    # No additional permissions needed - inherits contents: read
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Run RuboCop with auto-correct
      run: |
        bundle exec rubocop -A
        git diff --exit-code || (echo "RuboCop made changes. Please commit these changes." && exit 1)

  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read        # Required for actions/checkout
      pull-requests: write  # Required for commenting on PRs
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Run tests with coverage
      run: bundle exec rake spec
      env:
        COVERAGE: true
    
    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || 'main' }}
        path: coverage/
        retention-days: 30

    - name: Comment on PR with coverage report location
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = 'ðŸ“Š **Coverage Report Available**\n\nTo view the coverage report for this PR:\n1. Go to the Actions tab\n2. Click on this workflow run\n3. Scroll down to Artifacts\n4. Download `coverage-report-pr-' + context.issue.number + '`\n5. Extract the zip file\n6. Open `coverage/index.html` in your browser'
          
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          })
